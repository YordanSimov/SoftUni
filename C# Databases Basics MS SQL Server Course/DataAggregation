--ex 1
SELECT COUNT(*) FROM WizzardDeposits

--ex 2
SELECT MagicWandSize AS [LongestMagicWand] FROM WizzardDeposits
	ORDER BY MagicWandSize DESC

--ex 3
SELECT DepositGroup, MAX(MagicWandSize) AS [LongestMagicWand]
	FROM WizzardDeposits
	GROUP BY DepositGroup

--ex 4
SELECT TOP(2) DepositGroup FROM 
	(SELECT DepositGroup, AVG(MagicWandSize) AS [AverageWandSize]
	FROM WizzardDeposits
	GROUP BY DepositGroup) AS AverageWandSizeQuery
ORDER BY AverageWandSize

--ex 5
SELECT DepositGroup,SUM(DepositAmount) AS [TotalSum] FROM WizzardDeposits
	GROUP BY DepositGroup

--ex 6
SELECT DepositGroup,SUM(DepositAmount) AS [TotalSum] FROM WizzardDeposits
	WHERE MagicWandCreator='Ollivander family'
	GROUP BY DepositGroup

--ex 7
SELECT DepositGroup,SUM(DepositAmount) AS [TotalSum] FROM WizzardDeposits
	WHERE MagicWandCreator='Ollivander family' 
	GROUP BY DepositGroup
	HAVING SUM(DepositAmount)<150000
	ORDER BY TotalSum DESC

--ex 8
SELECT DepositGroup,MagicWandCreator,MIN(DepositCharge) AS [MinDepositCharge]
	FROM WizzardDeposits
	GROUP BY DepositGroup,MagicWandCreator
	ORDER BY MagicWandCreator,DepositGroup

--ex 9
SELECT AgeGroup,COUNT(*) AS [WizzardsCount] FROM (SELECT 
	CASE
		WHEN Age<=10 THEN '[0-10]'
		WHEN Age BETWEEN 11 AND 20 THEN '[11-20]'
		WHEN Age BETWEEN 21 AND 30 THEN '[21-30]'
		WHEN Age BETWEEN 31 AND 40 THEN '[31-40]'
		WHEN Age BETWEEN 41 AND 50 THEN '[41-50]'
		WHEN Age BETWEEN 51 AND 60 THEN '[51-60]'
		ELSE '[61+]'
	END AS [AgeGroup],*
	FROM WizzardDeposits) AS [AgeGroupQuery]
GROUP BY AgeGroup
--ex 10
SELECT SUBSTRING(FirstName,1,1)
	FROM WizzardDeposits
	WHERE DepositGroup='Troll Chest'
	GROUP BY SUBSTRING(FirstName,1,1)
ORDER BY SUBSTRING(FirstName,1,1)

--ex 11
SELECT DepositGroup,IsDepositExpired,AVG(DepositInterest) FROM WizzardDeposits
	WHERE DepositStartDate> '1985-01-01'
	GROUP BY DepositGroup,IsDepositExpired
	ORDER BY DepositGroup DESC, IsDepositExpired ASC

--ex 12
SELECT SUM([Host Wizard Deposit]-[Guest Wizard Deposit]) AS [Difference]
	FROM (SELECT FirstName AS [HostWizard],
		DepositAmount AS [Host Wizard Deposit],
		LEAD(FirstName) OVER(ORDER BY Id ASC) AS [Guest Wizard],
		LEAD(DepositAmount) OVER(ORDER BY Id ASC) AS [Guest Wizard Deposit]
	FROM WizzardDeposits) AS [LeadQuery]
--ex 13
USE [SoftUni]

	SELECT DepartmentID,SUM(Salary) FROM Employees
	GROUP BY DepartmentID
	ORDER BY DepartmentID

--ex 14
SELECT DepartmentID,MIN(Salary) FROM Employees
	WHERE DepartmentID IN (2,5,7) AND HireDate>'2000-01-01'
	GROUP BY DepartmentID
	ORDER BY DepartmentID

--ex 15
SELECT * INTO EmployeesWitHighSalaries FROM Employees
	  WHERE Salary>30000

DELETE FROM EmployeesWitHighSalaries
	WHERE ManagerID=42

UPDATE EmployeesWitHighSalaries 
	SET Salary+=5000
	WHERE DepartmentID=1

SELECT DepartmentId,AVG(Salary) AS [AverageSalary]
	FROM EmployeesWitHighSalaries 
	GROUP BY DepartmentID

--ex 16
SELECT DepartmentID,MaxSalary FROM
 (SELECT DepartmentID,MAX(Salary) AS [MaxSalary] FROM Employees
 GROUP BY DepartmentID) AS [MaxSalaryQuery]
 WHERE MaxSalary NOT BETWEEN 30000 AND 70000

--ex 17
SELECT COUNT(*) FROM Employees
	WHERE ManagerID IS NULL

--ex 18
SELECT DISTINCT DepartmentID,Salary AS [ThirdHighestSalary]
	FROM
	(SELECT DepartmentID,Salary, 
		DENSE_RANK() OVER(PARTITION BY DepartmentID ORDER BY Salary DESC) AS [SalaryRank] 
	FROM Employees)
	 AS [SalaryRankQuery]
WHERE SalaryRank=3

--ex 19

SELECT TOP(10) e1.FirstName,e1.LastName,e1.DepartmentID
	FROM Employees AS e1
	WHERE e1.Salary>
		(SELECT AVG(Salary) AS [AverageSalary]
		FROM Employees AS e2
		WHERE e2.DepartmentID=e1.DepartmentID
		GROUP BY DepartmentID)
	ORDER BY DepartmentID 
