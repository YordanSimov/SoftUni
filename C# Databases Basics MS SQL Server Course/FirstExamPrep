CREATE DATABASE [Airport] 

USE [Airport]
--ex 1
CREATE TABLE Planes(
	Id INT IDENTITY PRIMARY KEY,
	[Name] VARCHAR(30) NOT NULL,
	Seats INT NOT NULL,
	[Range] INT NOT NULL
)

CREATE TABLE Flights(
	Id INT PRIMARY KEY IDENTITY,
	DepartureTime DATETIME2,
	ArrivalTime DATETIME2,
	Origin VARCHAR(50) NOT NULL,
	Destination VARCHAR(50) NOT NULL,
	PlaneId INT FOREIGN KEY REFERENCES Planes(Id)
)

CREATE TABLE Passengers(
	Id INT PRIMARY KEY IDENTITY,
	FirstName VARCHAR(30) NOT NULL,
	LastName VARCHAR(30) NOT NULL,
	Age INT NOT NULL,
	[Address] VARCHAR(30) NOT NULL,
	PassportId CHAR(11) NOT NULL
)

CREATE TABLE LuggageTypes(
	Id INT PRIMARY KEY IDENTITY,
	[Type] VARCHAR(30) NOT NULL,	
)

CREATE TABLE Luggages(
	Id INT PRIMARY KEY IDENTITY,
	LuggageTypeId INT FOREIGN KEY REFERENCES LuggageTypes(Id) NOT NULL,
	PassengerId INT FOREIGN KEY REFERENCES Passengers(Id) NOT NULL
)

CREATE TABLE Tickets(
	Id INT PRIMARY KEY IDENTITY,
	PassengerId INT FOREIGN KEY REFERENCES Passengers(Id) NOT NULL,
	FlightId INT FOREIGN KEY REFERENCES Flights(Id) NOT NULL,
	LuggageId INT FOREIGN KEY REFERENCES Luggages(Id) NOT NULL,
	Price DECIMAL(18,2) NOT NULL
)
--ex 2
INSERT INTO Planes([Name],Seats,[Range])
VALUES
	('Airbus 336',112,5132),
	('Airbus 330',432,5325),
	('Boeing 369',231,2355),
	('Stelt 297',254,2143),
	('Boeing 338',165,5111),
	('Airbus 558',387,1342),
	('Boeing 128',345,5541)

INSERT INTO LuggageTypes([Type])
VALUES
	('Crossbody Bag'),
	('School Backpack'),
	('Shoulder Bag')
--ex 3
UPDATE Tickets 
	SET Price += Price * 0.13
	WHERE FlightId IN
		(
		SELECT Id FROM Flights
		WHERE Destination='Carlsbad'
		)
--ex 4
DELETE FROM Tickets
	WHERE FlightId IN(
		SELECT Id FROM Flights
		WHERE Destination='Ayn Halagim')

DELETE FROM Flights
	WHERE Destination='Ayn Halagim'

--ex 5
SELECT * FROM Planes
	WHERE [Name] LIKE '%tr%'
	ORDER BY Id,Seats,[Range]
--ex 6
SELECT t.FlightId,SUM(t.Price) AS [Price] FROM Flights AS f
	LEFT JOIN Tickets AS t
	ON t.FlightId=f.Id
	GROUP BY t.FlightId
	ORDER BY Price DESC,FlightId
--ex 7
SELECT (FirstName + ' ' + LastName) AS [Full Name],f.Origin,f.Destination FROM Passengers AS p
	JOIN Tickets AS t
	ON t.PassengerId=p.Id
	JOIN Flights AS f
	ON f.Id=t.FlightId
		ORDER BY [Full Name],Origin,Destination
--ex 8
SELECT p.FirstName, p.LastName,p.Age FROM Passengers AS p
	LEFT JOIN Tickets AS t 
	ON p.Id=t.PassengerId
	WHERE FlightId IS NULL
	ORDER BY Age DESC, FirstName, LastName
--ex 9 
SELECT (FirstName + ' ' + LastName) AS [Full Name],
	pl.[Name],
	(Origin + ' - ' + Destination),
	lt.[Type]
		FROM Passengers AS p
			JOIN Tickets AS t ON 
			p.Id=t.PassengerId
			JOIN Flights AS f
			ON f.Id=t.FlightId
			JOIN Planes AS pl
			ON pl.Id=f.PlaneId
			JOIN Luggages AS l
			ON l.Id=t.LuggageId
			JOIN LuggageTypes AS lt
			ON lt.Id=l.LuggageTypeId
				WHERE FlightId IS NOT NULL
				ORDER BY [Full Name],pl.[Name],Origin,Destination,lt.[Type]
--ex 10
SELECT p.[Name],Seats,COUNT(pa.Id) AS [Passengers Count] FROM Planes AS p
	LEFT JOIN Flights AS f
	ON f.PlaneId=p.Id
	LEFT JOIN Tickets AS t
	ON t.FlightId=f.Id
	LEFT JOIN Passengers AS pa
	ON pa.Id=t.PassengerId
	GROUP BY p.[Name],Seats
	ORDER BY [Passengers Count] DESC,p.[Name],Seats
--ex 11
CREATE FUNCTION udf_CalculateTickets(@origin VARCHAR(50), @destination VARCHAR(50), @peopleCount INT) 
RETURNS VARCHAR(50)
AS
BEGIN
	DECLARE @flightId INT =(
	SELECT TOP(1) Id FROM Flights
	WHERE Origin=@origin AND Destination=@destination
	);
	
	DECLARE @pricePerTicket DECIMAL(10,2) =(
	
	SELECT TOP(1) Price FROM Tickets
	WHERE @flightId = FlightId
	);

	DECLARE @totalPrice DECIMAL(18,2) = @pricePerTicket * @peopleCount;

	IF (@peopleCount<=0)
	BEGIN
	RETURN 'Invalid people count!';
	END
	ELSE IF(@flightId IS NULL)
	BEGIN
	RETURN 'Invalid flight!';
	END
	RETURN CONCAT('Total price ',@totalPrice);
END
GO

SELECT dbo.udf_CalculateTickets('Kolyshley','Rancabolang', 33)
--ex 12
CREATE PROCEDURE usp_CancelFlights 
AS
BEGIN
	UPDATE Flights SET ArrivalTime=NULL,DepartureTime=NULL
	WHERE ArrivalTime>DepartureTime
END

EXEC usp_CancelFlights
